{"version":3,"sources":["../../src/config/settings.setting.ts"],"names":[],"mappings":";;;AA8BO,IAAM,QAAqB,GAAA;AAAA,EAChC,YAAc,EAAA,IAAA;AAAA,EACd,eAAiB,EAAA,MAAA;AAAA,EACjB,iBAAmB,EAAA,MAAA;AAAA,EACnB,oBAAsB,EAAA;AACxB","file":"settings.setting.js","sourcesContent":["import type { Settings } from '../interfaces/settings.interface'\n\n/**\n * Default configuration settings for TS Mixins.\n *\n * @property {string | null} initFunction - Name of the initialization function to call after mixing.\n *   Set to null to disable initialization function calling.\n *\n * @property {string} staticsStrategy - Strategy for handling static properties.\n *   - 'copy': Copy static properties (more performant, ES5 compatible)\n *   - 'proxy': Proxy static properties (less performant, but reflects changes to source classes)\n *\n * @property {string} prototypeStrategy - Strategy for handling prototype properties.\n *   - 'copy': Copy prototype properties (more performant, ES5 compatible)\n *   - 'proxy': Proxy prototype properties (less performant, but reflects changes to source classes)\n *\n * @property {string} decoratorInheritance - Strategy for inheriting decorators from constituent classes.\n *   - 'deep': Inherit decorators from all classes in the prototype chain and mixins\n *   - 'direct': Inherit decorators only from direct constituent classes\n *   - 'none': Don't inherit decorators\n *\n * @example\n * import { settings } from 'ts-mixins';\n *\n * // Configure initialization function\n * settings.initFunction = 'init';\n *\n * // Configure prototype strategy\n * settings.prototypeStrategy = 'proxy';\n */\nexport const settings: Settings = {\n  initFunction: null,\n  staticsStrategy: 'copy',\n  prototypeStrategy: 'copy',\n  decoratorInheritance: 'deep',\n}\n"]}